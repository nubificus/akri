1. Get the Akri Controller:
  kubectl get -o wide pods | grep controller
2. Get the Akri Agent(s):
  kubectl get -o wide pods | grep agent
3. Get the Akri Configuration(s):
  kubectl get -o wide akric



helm repo add akri-helm-charts https://project-akri.github.io/akri/
helm install akri akri-helm-charts/akri \
   $AKRI_HELM_CRICTL_CONFIGURATION \
    --set udev.discovery.enabled=true \
    --set udev.configuration.enabled=true \
    --set udev.configuration.discoveryDetails.udevRules[0]='TAG=="akri_tag" \'
    --set udev.configuration.brokerPod.image.repository=nginx



helm update akri akri-helm-charts/akri \
   $AKRI_HELM_CRICTL_CONFIGURATION \
    --set udev.discovery.enabled=true \
    --set udev.configuration.enabled=true \
    --set udev.configuration.discoveryDetails.udevRules[0]='TAG=="akri_tag"' \
    --set udev.configuration.brokerPod.image.repository=nginx


helm install  akri akri-helm-charts/akri \
   $AKRI_HELM_CRICTL_CONFIGURATION \
    --set udev.discovery.enabled=true \
    --set udev.configuration.enabled=true \
    --set udev.configuration.discoveryDetails.udevRules[0]='TAG=="akri_tag"' \
    --set udev.configuration.brokerPod.image.repository=docker.io/plakic/esp-helloworld \
    --set udev.configuration.brokerPod.image.tag=v.1.5.9 \
    --set udev.configuration.brokerPod.resources.memoryRequest="20Mi" \
    --set udev.configuration.brokerPod.resources.cpuRequest="10m" \
    --set udev.configuration.brokerPod.resources.memoryLimit="2048Mi" \
    --set udev.configuration.brokerPod.resources.cpuLimit="1000m" 


helm delete akri
kubectl delete crd instances.akri.sh
kubectl delete crd configurations.akri.sh


helm install akri akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
  --set custom.discovery.image.tag=v1.15 \
  --set custom.discovery.name=akri-http-discovery  \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=akri-http  \
  --set custom.configuration.discoveryHandlerName=http \
  --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat1


helm install akri-discoveryi-type2 akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=docker.io/plakic/http-discovery-handler \
  --set custom.discovery.image.tag=v1.14 \
  --set custom.discovery.name=akri-http-discovery-type2 \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=akri-http-type2  \
  --set custom.configuration.discoveryHandlerName=http \
  --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \
  --set rbac.enabled=false




helm install akri-discoveryi-type3 akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=docker.io/plakic/http-discovery-handler \
  --set custom.discovery.image.tag=v1.14 \
  --set custom.discovery.name=akri-http-discovery-type3 \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=akri-http-type3  \
  --set custom.configuration.discoveryHandlerName=http \
  --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat3 \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \
  --set rbac.enabled=false



helm upgrade akri akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=docker.io/plakic/http-discovery-handler \
  --set custom.discovery.image.tag=v1.14 \
  --set custom.discovery.name=akri-http-discovery  \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=akri-http  \
  --set custom.configuration.discoveryHandlerName=http \
  --set custom.configuration.discoveryDetails=http://discovery:8080/discovery \
  --set custom.configuration.brokerPod.image.repository=docker.io/plakic/http-broker \
  --set custom.configuration.brokerPod.image.tag=v1.6




helm install akri-echo-file-disc akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
  --set custom.discovery.image.tag=v0.91 \
  --set custom.discovery.name=http-echo-file \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=http-echo-file  \
  --set custom.configuration.discoveryHandlerName=http-echo-file \
  --set custom.configuration.discoveryDetails=http://dissada \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \
  --set rbac.enabled=false \
  --set custom.configuration.brokerPod.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerPod.image.tag=v0.85



helm install akri-http-mq-discovery akri-helm-charts/akri \
  $AKRI_HELM_CRICTL_CONFIGURATION \
  --set custom.discovery.enabled=true  \
  --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-mq-discovery-handler \
  --set custom.discovery.image.tag=v0.1 \
  --set custom.discovery.name=http-mq-discovery-handler \
  --set custom.configuration.enabled=true  \
  --set custom.configuration.name=http-mq-discovery-handler \
  --set custom.configuration.discoveryHandlerName=http-mq-discovery-handler \
  --set custom.configuration.discoveryDetails=http://dissada \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \
  --set rbac.enabled=false 



 helm template akri-echo-file-disc akri-helm-charts/akri   $AKRI_HELM_CRICTL_CONFIGURATION \
   --set custom.discovery.enabled=true \
   --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
   --set custom.discovery.image.tag=v0.91 \
  --set custom.discovery.name=http-echo-file \
  --set custom.configuration.enabled=true \
   --set custom.configuration.name=http-echo-file  \
  --set custom.configuration.discoveryHandlerName=http-echo-file  \
  --set custom.configuration.discoveryDetails=http://dissada \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \  
  --set rbac.enabled=false \   
  --set custom.configuration.brokerJob.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerPod.image.tag=v1.85


helm repo add akri-helm-charts https://project-akri.github.io/akri/
helm install akri akri-helm-charts/akri-dev \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true

helm repo add nubis-helm-charts https://nubificus.github.io/akri-helm-chart/ 
helm install akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true




helm template akri-echo-file-disc nubis-helm-charts/akri   $AKRI_HELM_CRICTL_CONFIGURATION \
   --set custom.discovery.enabled=true \
   --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
   --set custom.discovery.image.tag=v0.91 \
  --set custom.discovery.name=http-echo-file \
  --set custom.configuration.enabled=true \
   --set custom.configuration.name=http-echo-file  \
  --set custom.configuration.discoveryHandlerName=http-echo-file  \
  --set custom.configuration.discoveryDetails=http://dissada \
  --set webhookConfiguration.enabled=false \
  --set controller.enabled=false \
  --set agent.enabled=false \
  --set rbac.enabled=false \
  --set custom.configuration.brokerPod.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerPod.image.tag=v1.85 \
  --set custom.configuration.brokerJob.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerJob.image.tag=v1.85


helm template  akri2 nubis-helm-charts/akri     $AKRI_HELM_CRICTL_CONFIGURATION \     
--set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller"  \   
--set controller.image.tag="v0.2.34"  \   
   --set custom.discovery.enabled=true \
   --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
   --set custom.discovery.image.tag=v0.91 \
  --set custom.discovery.name=http-echo-file \
  --set custom.configuration.enabled=true \
   --set custom.configuration.name=http-echo-file  \
  --set custom.configuration.discoveryHandlerName=http-echo-file  \
  --set custom.configuration.discoveryDetails=http://dissada \
 --set custom.configuration.brokerPod.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerPod.image.tag=v1.85 \
  --set custom.configuration.brokerJob.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerJob.image.tag=v1.85




helm repo add nubis-helm-charts https://nubificus.github.io/akri-helm-chart/
helm install akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true \
  --set custom.discovery.enabled=true  \
   --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
   --set custom.discovery.image.tag=v0.91 \
  --set custom.discovery.name=http-echo-file \
  --set custom.configuration.enabled=true \
   --set custom.configuration.name=http-echo-file  \
  --set custom.configuration.discoveryHandlerName=http-echo-file  \
  --set custom.configuration.discoveryDetails=http://dissada \
  --set custom.configuration.brokerJop.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerJob.image.tag=v0.85 
  --set custom.configuration.brokerJob.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
  --set custom.configuration.brokerJob.image.tag=v0.85



helm install akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true 
 
helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
    --set custom.discovery.image.tag=v0.91 \
    --set custom.discovery.name=http-echo-file \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http-echo-file  \
    --set custom.configuration.discoveryHandlerName=http-echo-file  \
    --set custom.configuration.discoveryDetails=http://dissada \
    --set custom.configuration.brokerPod.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
    --set custom.configuration.brokerPod.image.tag=v0.85 



helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.34" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http-echo-file  \
    --set custom.configuration.discoveryHandlerName=http-echo-file  \
    --set custom.configuration.discoveryDetails=http://dissada \
    --set custom.configuration.brokerJob.image.repository=harbor.nbfc.io/cloud-iot/echo-file-broker \
    --set custom.configuration.brokerJob.image.tag=v0.85 \ 
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-echo-file-discovery-handler \
    --set custom.discovery.image.tag=v0.91 \
    --set custom.discovery.name=http-echo-file 




helm install akri  nubis-helm-charts/akri  $AKRI_HELM_CRICTL_CONFIGURATION -f values.yaml --debug


helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.36" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.36" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
    --set custom.discovery.image.tag=v1.17 \
    --set custom.discovery.name=http-discovery-type2 \
    --set custom.configuration.brokerPod.image.repository=registry.hub.docker.com/library/busybox \
    --set custom.configuration.brokerPod.image.tag=latest


helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.36" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.36" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
    --set custom.discovery.image.tag=v1.17 \
    --set custom.discovery.name=http-discovery-type2 \
    --set custom.configuration.brokerJob.image.repository=registry.hub.docker.com/library/busybox \
    --set custom.configuration.brokerJob.image.tag=latest


helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.42" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.38" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
    --set custom.discovery.image.tag=v1.17 \
    --set custom.discovery.name=http-discovery-type2 \
    --set custom.configuration.firmwareJob.image.repository=registry.hub.docker.com/library/busybox \
    --set custom.configuration.firmwareJob.image.tag=latest



helm install  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.36" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.36" \
    --set useLatestContainers=true \ 
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
    --set custom.discovery.image.tag=v1.17 \
    --set custom.discovery.name=http-discovery-type2 



helm upgrade  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.42" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.38" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-discovery-handler \
    --set custom.discovery.image.tag=v1.17 \
    --set custom.discovery.name=http-discovery-type2 \
    --set custom.configuration.firmwareJob.image.repository=registry.hub.docker.com/library/busybox \
    --set custom.configuration.firmwareJob.image.tag=latest

helm install  akri nubis-helm-charts/akri \
    $AKRI_HELM_CRICTL_CONFIGURATION \
    --set controller.image.repository="harbor.nbfc.io/cloud-iot/akri/controller" \
    --set controller.image.tag="v0.2.42" \
    --set agent.image.repository="harbor.nbfc.io/cloud-iot/akri/agent" \
    --set agent.image.tag="v0.2.38" \
    --set useLatestContainers=true \
    --set custom.configuration.enabled=true \
    --set custom.configuration.name=http  \
    --set custom.configuration.discoveryHandlerName=http-range \
    --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat2 \
    --set custom.discovery.enabled=true  \
    --set custom.discovery.image.repository=harbor.nbfc.io/cloud-iot/http-range-discovery-handler \
    --set custom.discovery.image.tag=v0.1 \
    --set custom.discovery.name=http-range-discovery 


helm install akri  nubis-helm-charts/akri  $AKRI_HELM_CRICTL_CONFIGURATION -f values-http-range.yaml --debug





helm template akri-discoveryi-type3 akri-helm-charts/akri   $AKRI_HELM_CRICTL_CONFIGURATION   --set custom.discovery.enabled=true    --set custom.discovery.image.repository=docker.io/plakic/http-discovery-handler   --set custom.discovery.image.tag=v1.14   --set custom.discovery.name=akri-http-discovery-type3   --set custom.configuration.enabled=true    --set custom.configuration.name=akri-http-type3    --set custom.configuration.discoveryHandlerName=http   --set custom.configuration.discoveryDetails=http://discovery:8080/heartbeat3   --set webhookConfiguration.enabled=false   --set controller.enabled=false   --set agent.enabled=false   --set rbac.enabled=false > /tmp/temp2.yaml
